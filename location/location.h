// +build !minimal

#pragma once

#ifndef GO_QTLOCATION_H
#define GO_QTLOCATION_H

#include <stdint.h>

#ifdef __cplusplus
int QGeoCodeReply_QGeoCodeReply_QRegisterMetaType();
int QGeoCodingManager_QGeoCodingManager_QRegisterMetaType();
int QGeoCodingManagerEngine_QGeoCodingManagerEngine_QRegisterMetaType();
int QGeoRouteReply_QGeoRouteReply_QRegisterMetaType();
int QGeoRoutingManager_QGeoRoutingManager_QRegisterMetaType();
int QGeoRoutingManagerEngine_QGeoRoutingManagerEngine_QRegisterMetaType();
int QGeoServiceProvider_QGeoServiceProvider_QRegisterMetaType();
int QPlaceContentReply_QPlaceContentReply_QRegisterMetaType();
int QPlaceDetailsReply_QPlaceDetailsReply_QRegisterMetaType();
int QPlaceIdReply_QPlaceIdReply_QRegisterMetaType();
int QPlaceManager_QPlaceManager_QRegisterMetaType();
int QPlaceManagerEngine_QPlaceManagerEngine_QRegisterMetaType();
int QPlaceMatchReply_QPlaceMatchReply_QRegisterMetaType();
int QPlaceReply_QPlaceReply_QRegisterMetaType();
int QPlaceSearchReply_QPlaceSearchReply_QRegisterMetaType();
int QPlaceSearchSuggestionReply_QPlaceSearchSuggestionReply_QRegisterMetaType();
extern "C" {
#endif

struct QtLocation_PackedString { char* data; long long len; };
struct QtLocation_PackedList { void* data; long long len; };
void* QGeoManeuver_NewQGeoManeuver();
void* QGeoManeuver_NewQGeoManeuver2(void* other);
void QGeoManeuver_SetDirection(void* ptr, long long direction);
void QGeoManeuver_SetDistanceToNextInstruction(void* ptr, double distance);
void QGeoManeuver_SetExtendedAttributes(void* ptr, void* extendedAttributes);
void QGeoManeuver_SetInstructionText(void* ptr, struct QtLocation_PackedString instructionText);
void QGeoManeuver_SetPosition(void* ptr, void* position);
void QGeoManeuver_SetTimeToNextInstruction(void* ptr, int secs);
void QGeoManeuver_SetWaypoint(void* ptr, void* coordinate);
void QGeoManeuver_DestroyQGeoManeuver(void* ptr);
void* QGeoManeuver_Position(void* ptr);
void* QGeoManeuver_Waypoint(void* ptr);
long long QGeoManeuver_Direction(void* ptr);
struct QtLocation_PackedString QGeoManeuver_InstructionText(void* ptr);
struct QtLocation_PackedList QGeoManeuver_ExtendedAttributes(void* ptr);
char QGeoManeuver_IsValid(void* ptr);
int QGeoManeuver_TimeToNextInstruction(void* ptr);
double QGeoManeuver_DistanceToNextInstruction(void* ptr);
void* QGeoManeuver___setExtendedAttributes_extendedAttributes_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoManeuver___setExtendedAttributes_extendedAttributes_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoManeuver___setExtendedAttributes_extendedAttributes_newList(void* ptr);
struct QtLocation_PackedList QGeoManeuver___setExtendedAttributes_extendedAttributes_keyList(void* ptr);
void* QGeoManeuver___extendedAttributes_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoManeuver___extendedAttributes_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoManeuver___extendedAttributes_newList(void* ptr);
struct QtLocation_PackedList QGeoManeuver___extendedAttributes_keyList(void* ptr);
struct QtLocation_PackedString QGeoManeuver_____setExtendedAttributes_extendedAttributes_keyList_atList(void* ptr, int i);
void QGeoManeuver_____setExtendedAttributes_extendedAttributes_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoManeuver_____setExtendedAttributes_extendedAttributes_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoManeuver_____extendedAttributes_keyList_atList(void* ptr, int i);
void QGeoManeuver_____extendedAttributes_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoManeuver_____extendedAttributes_keyList_newList(void* ptr);
void* QGeoRoute_NewQGeoRoute();
void* QGeoRoute_NewQGeoRoute2(void* other);
void QGeoRoute_SetBounds(void* ptr, void* bounds);
void QGeoRoute_SetDistance(void* ptr, double distance);
void QGeoRoute_SetFirstRouteSegment(void* ptr, void* routeSegment);
void QGeoRoute_SetPath(void* ptr, void* path);
void QGeoRoute_SetRequest(void* ptr, void* request);
void QGeoRoute_SetRouteId(void* ptr, struct QtLocation_PackedString id);
void QGeoRoute_SetRouteLegs(void* ptr, void* legs);
void QGeoRoute_SetTravelMode(void* ptr, long long mode);
void QGeoRoute_SetTravelTime(void* ptr, int secs);
void QGeoRoute_DestroyQGeoRoute(void* ptr);
void* QGeoRoute_Bounds(void* ptr);
void* QGeoRoute_Request(void* ptr);
long long QGeoRoute_TravelMode(void* ptr);
void* QGeoRoute_FirstRouteSegment(void* ptr);
struct QtLocation_PackedList QGeoRoute_Path(void* ptr);
struct QtLocation_PackedList QGeoRoute_RouteLegs(void* ptr);
struct QtLocation_PackedString QGeoRoute_RouteId(void* ptr);
int QGeoRoute_TravelTime(void* ptr);
double QGeoRoute_Distance(void* ptr);
void* QGeoRoute___setPath_path_atList(void* ptr, int i);
void QGeoRoute___setPath_path_setList(void* ptr, void* i);
void* QGeoRoute___setPath_path_newList(void* ptr);
void* QGeoRoute___setRouteLegs_legs_atList(void* ptr, int i);
void QGeoRoute___setRouteLegs_legs_setList(void* ptr, void* i);
void* QGeoRoute___setRouteLegs_legs_newList(void* ptr);
void* QGeoRoute___path_atList(void* ptr, int i);
void QGeoRoute___path_setList(void* ptr, void* i);
void* QGeoRoute___path_newList(void* ptr);
void* QGeoRoute___routeLegs_atList(void* ptr, int i);
void QGeoRoute___routeLegs_setList(void* ptr, void* i);
void* QGeoRoute___routeLegs_newList(void* ptr);
void* QGeoRouteLeg_NewQGeoRouteLeg();
void* QGeoRouteLeg_NewQGeoRouteLeg2(void* other);
void QGeoRouteLeg_SetLegIndex(void* ptr, int idx);
void QGeoRouteLeg_SetOverallRoute(void* ptr, void* route);
void QGeoRouteLeg_DestroyQGeoRouteLeg(void* ptr);
void* QGeoRouteLeg_OverallRoute(void* ptr);
int QGeoRouteLeg_LegIndex(void* ptr);
void* QGeoRouteReply_NewQGeoRouteReply(long long error, struct QtLocation_PackedString errorString, void* parent);
void* QGeoRouteReply_NewQGeoRouteReply2(void* request, void* parent);
struct QtLocation_PackedString QGeoRouteReply_QGeoRouteReply_Tr(char* s, char* c, int n);
struct QtLocation_PackedString QGeoRouteReply_QGeoRouteReply_TrUtf8(char* s, char* c, int n);
void QGeoRouteReply_Abort(void* ptr);
void QGeoRouteReply_AbortDefault(void* ptr);
void QGeoRouteReply_ConnectAborted(void* ptr);
void QGeoRouteReply_DisconnectAborted(void* ptr);
void QGeoRouteReply_Aborted(void* ptr);
void QGeoRouteReply_AddRoutes(void* ptr, void* routes);
void QGeoRouteReply_ConnectError2(void* ptr);
void QGeoRouteReply_DisconnectError2(void* ptr);
void QGeoRouteReply_Error2(void* ptr, long long error, struct QtLocation_PackedString errorString);
void QGeoRouteReply_ConnectFinished(void* ptr);
void QGeoRouteReply_DisconnectFinished(void* ptr);
void QGeoRouteReply_Finished(void* ptr);
void QGeoRouteReply_SetError(void* ptr, long long error, struct QtLocation_PackedString errorString);
void QGeoRouteReply_SetFinished(void* ptr, char finished);
void QGeoRouteReply_SetRoutes(void* ptr, void* routes);
void QGeoRouteReply_DestroyQGeoRouteReply(void* ptr);
void QGeoRouteReply_DestroyQGeoRouteReplyDefault(void* ptr);
long long QGeoRouteReply_Error(void* ptr);
void* QGeoRouteReply_Request(void* ptr);
struct QtLocation_PackedList QGeoRouteReply_Routes(void* ptr);
struct QtLocation_PackedString QGeoRouteReply_ErrorString(void* ptr);
char QGeoRouteReply_IsFinished(void* ptr);
void* QGeoRouteReply_MetaObjectDefault(void* ptr);
void* QGeoRouteReply___addRoutes_routes_atList(void* ptr, int i);
void QGeoRouteReply___addRoutes_routes_setList(void* ptr, void* i);
void* QGeoRouteReply___addRoutes_routes_newList(void* ptr);
void* QGeoRouteReply___setRoutes_routes_atList(void* ptr, int i);
void QGeoRouteReply___setRoutes_routes_setList(void* ptr, void* i);
void* QGeoRouteReply___setRoutes_routes_newList(void* ptr);
void* QGeoRouteReply___routes_atList(void* ptr, int i);
void QGeoRouteReply___routes_setList(void* ptr, void* i);
void* QGeoRouteReply___routes_newList(void* ptr);
void* QGeoRouteReply___dynamicPropertyNames_atList(void* ptr, int i);
void QGeoRouteReply___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGeoRouteReply___dynamicPropertyNames_newList(void* ptr);
void* QGeoRouteReply___findChildren_atList2(void* ptr, int i);
void QGeoRouteReply___findChildren_setList2(void* ptr, void* i);
void* QGeoRouteReply___findChildren_newList2(void* ptr);
void* QGeoRouteReply___findChildren_atList3(void* ptr, int i);
void QGeoRouteReply___findChildren_setList3(void* ptr, void* i);
void* QGeoRouteReply___findChildren_newList3(void* ptr);
void* QGeoRouteReply___findChildren_atList(void* ptr, int i);
void QGeoRouteReply___findChildren_setList(void* ptr, void* i);
void* QGeoRouteReply___findChildren_newList(void* ptr);
void* QGeoRouteReply___children_atList(void* ptr, int i);
void QGeoRouteReply___children_setList(void* ptr, void* i);
void* QGeoRouteReply___children_newList(void* ptr);
char QGeoRouteReply_EventDefault(void* ptr, void* e);
char QGeoRouteReply_EventFilterDefault(void* ptr, void* watched, void* event);
void QGeoRouteReply_ChildEventDefault(void* ptr, void* event);
void QGeoRouteReply_ConnectNotifyDefault(void* ptr, void* sign);
void QGeoRouteReply_CustomEventDefault(void* ptr, void* event);
void QGeoRouteReply_DeleteLaterDefault(void* ptr);
void QGeoRouteReply_DisconnectNotifyDefault(void* ptr, void* sign);
void QGeoRouteReply_TimerEventDefault(void* ptr, void* event);
void* QGeoRouteRequest_NewQGeoRouteRequest2(void* origin, void* destination);
void* QGeoRouteRequest_NewQGeoRouteRequest3(void* other);
void* QGeoRouteRequest_NewQGeoRouteRequest(void* waypoints);
void QGeoRouteRequest_SetExcludeAreas(void* ptr, void* areas);
void QGeoRouteRequest_SetExtraParameters(void* ptr, void* extraParameters);
void QGeoRouteRequest_SetFeatureWeight(void* ptr, long long featureType, long long featureWeight);
void QGeoRouteRequest_SetManeuverDetail(void* ptr, long long maneuverDetail);
void QGeoRouteRequest_SetNumberAlternativeRoutes(void* ptr, int alternatives);
void QGeoRouteRequest_SetRouteOptimization(void* ptr, long long optimization);
void QGeoRouteRequest_SetSegmentDetail(void* ptr, long long segmentDetail);
void QGeoRouteRequest_SetTravelModes(void* ptr, long long travelModes);
void QGeoRouteRequest_SetWaypoints(void* ptr, void* waypoints);
void QGeoRouteRequest_DestroyQGeoRouteRequest(void* ptr);
long long QGeoRouteRequest_FeatureWeight(void* ptr, long long featureType);
long long QGeoRouteRequest_ManeuverDetail(void* ptr);
long long QGeoRouteRequest_RouteOptimization(void* ptr);
long long QGeoRouteRequest_SegmentDetail(void* ptr);
long long QGeoRouteRequest_TravelModes(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_Waypoints(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_ExcludeAreas(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_ExtraParameters(void* ptr);
int QGeoRouteRequest_NumberAlternativeRoutes(void* ptr);
void* QGeoRouteRequest___QGeoRouteRequest_waypoints_atList(void* ptr, int i);
void QGeoRouteRequest___QGeoRouteRequest_waypoints_setList(void* ptr, void* i);
void* QGeoRouteRequest___QGeoRouteRequest_waypoints_newList(void* ptr);
void* QGeoRouteRequest___setExcludeAreas_areas_atList(void* ptr, int i);
void QGeoRouteRequest___setExcludeAreas_areas_setList(void* ptr, void* i);
void* QGeoRouteRequest___setExcludeAreas_areas_newList(void* ptr);
void* QGeoRouteRequest___setExtraParameters_extraParameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRouteRequest___setExtraParameters_extraParameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRouteRequest___setExtraParameters_extraParameters_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest___setExtraParameters_extraParameters_keyList(void* ptr);
void* QGeoRouteRequest___setWaypoints_waypoints_atList(void* ptr, int i);
void QGeoRouteRequest___setWaypoints_waypoints_setList(void* ptr, void* i);
void* QGeoRouteRequest___setWaypoints_waypoints_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest___setWaypointsMetadata_waypointMetadata_atList(void* ptr, int i);
void QGeoRouteRequest___setWaypointsMetadata_waypointMetadata_setList(void* ptr, void* i);
void* QGeoRouteRequest___setWaypointsMetadata_waypointMetadata_newList(void* ptr);
void* QGeoRouteRequest___waypoints_atList(void* ptr, int i);
void QGeoRouteRequest___waypoints_setList(void* ptr, void* i);
void* QGeoRouteRequest___waypoints_newList(void* ptr);
void* QGeoRouteRequest___excludeAreas_atList(void* ptr, int i);
void QGeoRouteRequest___excludeAreas_setList(void* ptr, void* i);
void* QGeoRouteRequest___excludeAreas_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest___waypointsMetadata_atList(void* ptr, int i);
void QGeoRouteRequest___waypointsMetadata_setList(void* ptr, void* i);
void* QGeoRouteRequest___waypointsMetadata_newList(void* ptr);
void* QGeoRouteRequest___extraParameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRouteRequest___extraParameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRouteRequest___extraParameters_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest___extraParameters_keyList(void* ptr);
struct QtLocation_PackedString QGeoRouteRequest_____setExtraParameters_extraParameters_keyList_atList(void* ptr, int i);
void QGeoRouteRequest_____setExtraParameters_extraParameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRouteRequest_____setExtraParameters_extraParameters_keyList_newList(void* ptr);
void* QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_atList_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_atList_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_atList_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_atList_keyList(void* ptr);
void* QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_setList_i_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_setList_i_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_setList_i_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_____setWaypointsMetadata_waypointMetadata_setList_i_keyList(void* ptr);
void* QGeoRouteRequest_____waypointsMetadata_atList_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRouteRequest_____waypointsMetadata_atList_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRouteRequest_____waypointsMetadata_atList_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_____waypointsMetadata_atList_keyList(void* ptr);
void* QGeoRouteRequest_____waypointsMetadata_setList_i_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRouteRequest_____waypointsMetadata_setList_i_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRouteRequest_____waypointsMetadata_setList_i_newList(void* ptr);
struct QtLocation_PackedList QGeoRouteRequest_____waypointsMetadata_setList_i_keyList(void* ptr);
struct QtLocation_PackedString QGeoRouteRequest_____extraParameters_keyList_atList(void* ptr, int i);
void QGeoRouteRequest_____extraParameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRouteRequest_____extraParameters_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoRouteRequest_______setWaypointsMetadata_waypointMetadata_atList_keyList_atList(void* ptr, int i);
void QGeoRouteRequest_______setWaypointsMetadata_waypointMetadata_atList_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRouteRequest_______setWaypointsMetadata_waypointMetadata_atList_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoRouteRequest_______setWaypointsMetadata_waypointMetadata_setList_i_keyList_atList(void* ptr, int i);
void QGeoRouteRequest_______setWaypointsMetadata_waypointMetadata_setList_i_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRouteRequest_______setWaypointsMetadata_waypointMetadata_setList_i_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoRouteRequest_______waypointsMetadata_atList_keyList_atList(void* ptr, int i);
void QGeoRouteRequest_______waypointsMetadata_atList_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRouteRequest_______waypointsMetadata_atList_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoRouteRequest_______waypointsMetadata_setList_i_keyList_atList(void* ptr, int i);
void QGeoRouteRequest_______waypointsMetadata_setList_i_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRouteRequest_______waypointsMetadata_setList_i_keyList_newList(void* ptr);
void* QGeoRouteSegment_NewQGeoRouteSegment();
void* QGeoRouteSegment_NewQGeoRouteSegment2(void* other);
void QGeoRouteSegment_SetDistance(void* ptr, double distance);
void QGeoRouteSegment_SetManeuver(void* ptr, void* maneuver);
void QGeoRouteSegment_SetNextRouteSegment(void* ptr, void* routeSegment);
void QGeoRouteSegment_SetPath(void* ptr, void* path);
void QGeoRouteSegment_SetTravelTime(void* ptr, int secs);
void QGeoRouteSegment_DestroyQGeoRouteSegment(void* ptr);
void* QGeoRouteSegment_Maneuver(void* ptr);
void* QGeoRouteSegment_NextRouteSegment(void* ptr);
struct QtLocation_PackedList QGeoRouteSegment_Path(void* ptr);
char QGeoRouteSegment_IsLegLastSegment(void* ptr);
char QGeoRouteSegment_IsValid(void* ptr);
int QGeoRouteSegment_TravelTime(void* ptr);
double QGeoRouteSegment_Distance(void* ptr);
void* QGeoRouteSegment___setPath_path_atList(void* ptr, int i);
void QGeoRouteSegment___setPath_path_setList(void* ptr, void* i);
void* QGeoRouteSegment___setPath_path_newList(void* ptr);
void* QGeoRouteSegment___path_atList(void* ptr, int i);
void QGeoRouteSegment___path_setList(void* ptr, void* i);
void* QGeoRouteSegment___path_newList(void* ptr);
void* QGeoRoutingManager_CalculateRoute(void* ptr, void* request);
void* QGeoRoutingManager_UpdateRoute(void* ptr, void* route, void* position);
struct QtLocation_PackedString QGeoRoutingManager_QGeoRoutingManager_Tr(char* s, char* c, int n);
struct QtLocation_PackedString QGeoRoutingManager_QGeoRoutingManager_TrUtf8(char* s, char* c, int n);
void QGeoRoutingManager_ConnectError(void* ptr);
void QGeoRoutingManager_DisconnectError(void* ptr);
void QGeoRoutingManager_Error(void* ptr, void* reply, long long error, struct QtLocation_PackedString errorString);
void QGeoRoutingManager_ConnectFinished(void* ptr);
void QGeoRoutingManager_DisconnectFinished(void* ptr);
void QGeoRoutingManager_Finished(void* ptr, void* reply);
void QGeoRoutingManager_SetLocale(void* ptr, void* locale);
void QGeoRoutingManager_SetMeasurementSystem(void* ptr, long long system);
void QGeoRoutingManager_DestroyQGeoRoutingManager(void* ptr);
void QGeoRoutingManager_DestroyQGeoRoutingManagerDefault(void* ptr);
long long QGeoRoutingManager_SupportedFeatureTypes(void* ptr);
long long QGeoRoutingManager_SupportedFeatureWeights(void* ptr);
long long QGeoRoutingManager_SupportedManeuverDetails(void* ptr);
long long QGeoRoutingManager_SupportedRouteOptimizations(void* ptr);
long long QGeoRoutingManager_SupportedSegmentDetails(void* ptr);
long long QGeoRoutingManager_SupportedTravelModes(void* ptr);
void* QGeoRoutingManager_Locale(void* ptr);
long long QGeoRoutingManager_MeasurementSystem(void* ptr);
struct QtLocation_PackedString QGeoRoutingManager_ManagerName(void* ptr);
void* QGeoRoutingManager_MetaObjectDefault(void* ptr);
int QGeoRoutingManager_ManagerVersion(void* ptr);
void* QGeoRoutingManager___dynamicPropertyNames_atList(void* ptr, int i);
void QGeoRoutingManager___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGeoRoutingManager___dynamicPropertyNames_newList(void* ptr);
void* QGeoRoutingManager___findChildren_atList2(void* ptr, int i);
void QGeoRoutingManager___findChildren_setList2(void* ptr, void* i);
void* QGeoRoutingManager___findChildren_newList2(void* ptr);
void* QGeoRoutingManager___findChildren_atList3(void* ptr, int i);
void QGeoRoutingManager___findChildren_setList3(void* ptr, void* i);
void* QGeoRoutingManager___findChildren_newList3(void* ptr);
void* QGeoRoutingManager___findChildren_atList(void* ptr, int i);
void QGeoRoutingManager___findChildren_setList(void* ptr, void* i);
void* QGeoRoutingManager___findChildren_newList(void* ptr);
void* QGeoRoutingManager___children_atList(void* ptr, int i);
void QGeoRoutingManager___children_setList(void* ptr, void* i);
void* QGeoRoutingManager___children_newList(void* ptr);
char QGeoRoutingManager_EventDefault(void* ptr, void* e);
char QGeoRoutingManager_EventFilterDefault(void* ptr, void* watched, void* event);
void QGeoRoutingManager_ChildEventDefault(void* ptr, void* event);
void QGeoRoutingManager_ConnectNotifyDefault(void* ptr, void* sign);
void QGeoRoutingManager_CustomEventDefault(void* ptr, void* event);
void QGeoRoutingManager_DeleteLaterDefault(void* ptr);
void QGeoRoutingManager_DisconnectNotifyDefault(void* ptr, void* sign);
void QGeoRoutingManager_TimerEventDefault(void* ptr, void* event);
void* QGeoRoutingManagerEngine_CalculateRoute(void* ptr, void* request);
void* QGeoRoutingManagerEngine_UpdateRoute(void* ptr, void* route, void* position);
void* QGeoRoutingManagerEngine_UpdateRouteDefault(void* ptr, void* route, void* position);
void* QGeoRoutingManagerEngine_NewQGeoRoutingManagerEngine(void* parameters, void* parent);
struct QtLocation_PackedString QGeoRoutingManagerEngine_QGeoRoutingManagerEngine_Tr(char* s, char* c, int n);
struct QtLocation_PackedString QGeoRoutingManagerEngine_QGeoRoutingManagerEngine_TrUtf8(char* s, char* c, int n);
void QGeoRoutingManagerEngine_ConnectError(void* ptr);
void QGeoRoutingManagerEngine_DisconnectError(void* ptr);
void QGeoRoutingManagerEngine_Error(void* ptr, void* reply, long long error, struct QtLocation_PackedString errorString);
void QGeoRoutingManagerEngine_ConnectFinished(void* ptr);
void QGeoRoutingManagerEngine_DisconnectFinished(void* ptr);
void QGeoRoutingManagerEngine_Finished(void* ptr, void* reply);
void QGeoRoutingManagerEngine_SetLocale(void* ptr, void* locale);
void QGeoRoutingManagerEngine_SetMeasurementSystem(void* ptr, long long system);
void QGeoRoutingManagerEngine_SetSupportedFeatureTypes(void* ptr, long long featureTypes);
void QGeoRoutingManagerEngine_SetSupportedFeatureWeights(void* ptr, long long featureWeights);
void QGeoRoutingManagerEngine_SetSupportedManeuverDetails(void* ptr, long long maneuverDetails);
void QGeoRoutingManagerEngine_SetSupportedRouteOptimizations(void* ptr, long long optimizations);
void QGeoRoutingManagerEngine_SetSupportedSegmentDetails(void* ptr, long long segmentDetails);
void QGeoRoutingManagerEngine_SetSupportedTravelModes(void* ptr, long long travelModes);
void QGeoRoutingManagerEngine_DestroyQGeoRoutingManagerEngine(void* ptr);
void QGeoRoutingManagerEngine_DestroyQGeoRoutingManagerEngineDefault(void* ptr);
long long QGeoRoutingManagerEngine_SupportedFeatureTypes(void* ptr);
long long QGeoRoutingManagerEngine_SupportedFeatureWeights(void* ptr);
long long QGeoRoutingManagerEngine_SupportedManeuverDetails(void* ptr);
long long QGeoRoutingManagerEngine_SupportedRouteOptimizations(void* ptr);
long long QGeoRoutingManagerEngine_SupportedSegmentDetails(void* ptr);
long long QGeoRoutingManagerEngine_SupportedTravelModes(void* ptr);
void* QGeoRoutingManagerEngine_Locale(void* ptr);
long long QGeoRoutingManagerEngine_MeasurementSystem(void* ptr);
struct QtLocation_PackedString QGeoRoutingManagerEngine_ManagerName(void* ptr);
void* QGeoRoutingManagerEngine_MetaObjectDefault(void* ptr);
int QGeoRoutingManagerEngine_ManagerVersion(void* ptr);
void* QGeoRoutingManagerEngine___QGeoRoutingManagerEngine_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoRoutingManagerEngine___QGeoRoutingManagerEngine_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoRoutingManagerEngine___QGeoRoutingManagerEngine_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoRoutingManagerEngine___QGeoRoutingManagerEngine_parameters_keyList(void* ptr);
struct QtLocation_PackedString QGeoRoutingManagerEngine_____QGeoRoutingManagerEngine_parameters_keyList_atList(void* ptr, int i);
void QGeoRoutingManagerEngine_____QGeoRoutingManagerEngine_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoRoutingManagerEngine_____QGeoRoutingManagerEngine_parameters_keyList_newList(void* ptr);
void* QGeoRoutingManagerEngine___dynamicPropertyNames_atList(void* ptr, int i);
void QGeoRoutingManagerEngine___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGeoRoutingManagerEngine___dynamicPropertyNames_newList(void* ptr);
void* QGeoRoutingManagerEngine___findChildren_atList2(void* ptr, int i);
void QGeoRoutingManagerEngine___findChildren_setList2(void* ptr, void* i);
void* QGeoRoutingManagerEngine___findChildren_newList2(void* ptr);
void* QGeoRoutingManagerEngine___findChildren_atList3(void* ptr, int i);
void QGeoRoutingManagerEngine___findChildren_setList3(void* ptr, void* i);
void* QGeoRoutingManagerEngine___findChildren_newList3(void* ptr);
void* QGeoRoutingManagerEngine___findChildren_atList(void* ptr, int i);
void QGeoRoutingManagerEngine___findChildren_setList(void* ptr, void* i);
void* QGeoRoutingManagerEngine___findChildren_newList(void* ptr);
void* QGeoRoutingManagerEngine___children_atList(void* ptr, int i);
void QGeoRoutingManagerEngine___children_setList(void* ptr, void* i);
void* QGeoRoutingManagerEngine___children_newList(void* ptr);
char QGeoRoutingManagerEngine_EventDefault(void* ptr, void* e);
char QGeoRoutingManagerEngine_EventFilterDefault(void* ptr, void* watched, void* event);
void QGeoRoutingManagerEngine_ChildEventDefault(void* ptr, void* event);
void QGeoRoutingManagerEngine_ConnectNotifyDefault(void* ptr, void* sign);
void QGeoRoutingManagerEngine_CustomEventDefault(void* ptr, void* event);
void QGeoRoutingManagerEngine_DeleteLaterDefault(void* ptr);
void QGeoRoutingManagerEngine_DisconnectNotifyDefault(void* ptr, void* sign);
void QGeoRoutingManagerEngine_TimerEventDefault(void* ptr, void* event);
int QGeoServiceProvider_OnlineGeocodingFeature_Type();
int QGeoServiceProvider_OfflineGeocodingFeature_Type();
int QGeoServiceProvider_ReverseGeocodingFeature_Type();
int QGeoServiceProvider_LocalizedGeocodingFeature_Type();
int QGeoServiceProvider_AnyGeocodingFeatures_Type();
int QGeoServiceProvider_OnlineMappingFeature_Type();
int QGeoServiceProvider_OfflineMappingFeature_Type();
int QGeoServiceProvider_LocalizedMappingFeature_Type();
int QGeoServiceProvider_AnyMappingFeatures_Type();
int QGeoServiceProvider_OnlineNavigationFeature_Type();
int QGeoServiceProvider_OfflineNavigationFeature_Type();
int QGeoServiceProvider_AnyNavigationFeatures_Type();
int QGeoServiceProvider_OnlinePlacesFeature_Type();
int QGeoServiceProvider_OfflinePlacesFeature_Type();
int QGeoServiceProvider_SavePlaceFeature_Type();
int QGeoServiceProvider_RemovePlaceFeature_Type();
int QGeoServiceProvider_SaveCategoryFeature_Type();
int QGeoServiceProvider_RemoveCategoryFeature_Type();
int QGeoServiceProvider_PlaceRecommendationsFeature_Type();
int QGeoServiceProvider_SearchSuggestionsFeature_Type();
int QGeoServiceProvider_LocalizedPlacesFeature_Type();
int QGeoServiceProvider_NotificationsFeature_Type();
int QGeoServiceProvider_PlaceMatchingFeature_Type();
int QGeoServiceProvider_AnyPlacesFeatures_Type();
int QGeoServiceProvider_OnlineRoutingFeature_Type();
int QGeoServiceProvider_OfflineRoutingFeature_Type();
int QGeoServiceProvider_LocalizedRoutingFeature_Type();
int QGeoServiceProvider_RouteUpdatesFeature_Type();
int QGeoServiceProvider_AlternativeRoutesFeature_Type();
int QGeoServiceProvider_ExcludeAreasRoutingFeature_Type();
int QGeoServiceProvider_AnyRoutingFeatures_Type();
void* QGeoServiceProvider_NewQGeoServiceProvider(struct QtLocation_PackedString providerName, void* parameters, char allowExperimental);
struct QtLocation_PackedString QGeoServiceProvider_QGeoServiceProvider_Tr(char* s, char* c, int n);
struct QtLocation_PackedString QGeoServiceProvider_QGeoServiceProvider_TrUtf8(char* s, char* c, int n);
struct QtLocation_PackedString QGeoServiceProvider_QGeoServiceProvider_AvailableServiceProviders();
void QGeoServiceProvider_SetAllowExperimental(void* ptr, char allow);
void QGeoServiceProvider_SetLocale(void* ptr, void* locale);
void QGeoServiceProvider_SetParameters(void* ptr, void* parameters);
void QGeoServiceProvider_SetQmlEngine(void* ptr, void* engine);
void QGeoServiceProvider_DestroyQGeoServiceProvider(void* ptr);
void QGeoServiceProvider_DestroyQGeoServiceProviderDefault(void* ptr);
void* QGeoServiceProvider_GeocodingManager(void* ptr);
void* QGeoServiceProvider_RoutingManager(void* ptr);
long long QGeoServiceProvider_Error(void* ptr);
long long QGeoServiceProvider_GeocodingFeatures(void* ptr);
long long QGeoServiceProvider_MappingFeatures(void* ptr);
long long QGeoServiceProvider_NavigationFeatures(void* ptr);
long long QGeoServiceProvider_PlacesFeatures(void* ptr);
long long QGeoServiceProvider_RoutingFeatures(void* ptr);
void* QGeoServiceProvider_PlaceManager(void* ptr);
struct QtLocation_PackedString QGeoServiceProvider_ErrorString(void* ptr);
void* QGeoServiceProvider_MetaObjectDefault(void* ptr);
void* QGeoServiceProvider___QGeoServiceProvider_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoServiceProvider___QGeoServiceProvider_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoServiceProvider___QGeoServiceProvider_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoServiceProvider___QGeoServiceProvider_parameters_keyList(void* ptr);
void* QGeoServiceProvider___setParameters_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoServiceProvider___setParameters_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoServiceProvider___setParameters_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoServiceProvider___setParameters_parameters_keyList(void* ptr);
struct QtLocation_PackedString QGeoServiceProvider_____QGeoServiceProvider_parameters_keyList_atList(void* ptr, int i);
void QGeoServiceProvider_____QGeoServiceProvider_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoServiceProvider_____QGeoServiceProvider_parameters_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoServiceProvider_____setParameters_parameters_keyList_atList(void* ptr, int i);
void QGeoServiceProvider_____setParameters_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoServiceProvider_____setParameters_parameters_keyList_newList(void* ptr);
void* QGeoServiceProvider___dynamicPropertyNames_atList(void* ptr, int i);
void QGeoServiceProvider___dynamicPropertyNames_setList(void* ptr, void* i);
void* QGeoServiceProvider___dynamicPropertyNames_newList(void* ptr);
void* QGeoServiceProvider___findChildren_atList2(void* ptr, int i);
void QGeoServiceProvider___findChildren_setList2(void* ptr, void* i);
void* QGeoServiceProvider___findChildren_newList2(void* ptr);
void* QGeoServiceProvider___findChildren_atList3(void* ptr, int i);
void QGeoServiceProvider___findChildren_setList3(void* ptr, void* i);
void* QGeoServiceProvider___findChildren_newList3(void* ptr);
void* QGeoServiceProvider___findChildren_atList(void* ptr, int i);
void QGeoServiceProvider___findChildren_setList(void* ptr, void* i);
void* QGeoServiceProvider___findChildren_newList(void* ptr);
void* QGeoServiceProvider___children_atList(void* ptr, int i);
void QGeoServiceProvider___children_setList(void* ptr, void* i);
void* QGeoServiceProvider___children_newList(void* ptr);
char QGeoServiceProvider_EventDefault(void* ptr, void* e);
char QGeoServiceProvider_EventFilterDefault(void* ptr, void* watched, void* event);
void QGeoServiceProvider_ChildEventDefault(void* ptr, void* event);
void QGeoServiceProvider_ConnectNotifyDefault(void* ptr, void* sign);
void QGeoServiceProvider_CustomEventDefault(void* ptr, void* event);
void QGeoServiceProvider_DeleteLaterDefault(void* ptr);
void QGeoServiceProvider_DisconnectNotifyDefault(void* ptr, void* sign);
void QGeoServiceProvider_TimerEventDefault(void* ptr, void* event);
void QGeoServiceProviderFactory_DestroyQGeoServiceProviderFactory(void* ptr);
void QGeoServiceProviderFactory_DestroyQGeoServiceProviderFactoryDefault(void* ptr);
void* QGeoServiceProviderFactory___createGeocodingManagerEngine_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoServiceProviderFactory___createGeocodingManagerEngine_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoServiceProviderFactory___createGeocodingManagerEngine_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoServiceProviderFactory___createGeocodingManagerEngine_parameters_keyList(void* ptr);
void* QGeoServiceProviderFactory___createMappingManagerEngine_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoServiceProviderFactory___createMappingManagerEngine_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoServiceProviderFactory___createMappingManagerEngine_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoServiceProviderFactory___createMappingManagerEngine_parameters_keyList(void* ptr);
void* QGeoServiceProviderFactory___createRoutingManagerEngine_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoServiceProviderFactory___createRoutingManagerEngine_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoServiceProviderFactory___createRoutingManagerEngine_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoServiceProviderFactory___createRoutingManagerEngine_parameters_keyList(void* ptr);
void* QGeoServiceProviderFactory___createPlaceManagerEngine_parameters_atList(void* ptr, struct QtLocation_PackedString v, int i);
void QGeoServiceProviderFactory___createPlaceManagerEngine_parameters_setList(void* ptr, struct QtLocation_PackedString key, void* i);
void* QGeoServiceProviderFactory___createPlaceManagerEngine_parameters_newList(void* ptr);
struct QtLocation_PackedList QGeoServiceProviderFactory___createPlaceManagerEngine_parameters_keyList(void* ptr);
struct QtLocation_PackedString QGeoServiceProviderFactory_____createGeocodingManagerEngine_parameters_keyList_atList(void* ptr, int i);
void QGeoServiceProviderFactory_____createGeocodingManagerEngine_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoServiceProviderFactory_____createGeocodingManagerEngine_parameters_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoServiceProviderFactory_____createMappingManagerEngine_parameters_keyList_atList(void* ptr, int i);
void QGeoServiceProviderFactory_____createMappingManagerEngine_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoServiceProviderFactory_____createMappingManagerEngine_parameters_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoServiceProviderFactory_____createRoutingManagerEngine_parameters_keyList_atList(void* ptr, int i);
void QGeoServiceProviderFactory_____createRoutingManagerEngine_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoServiceProviderFactory_____createRoutingManagerEngine_parameters_keyList_newList(void* ptr);
struct QtLocation_PackedString QGeoServiceProviderFactory_____createPlaceManagerEngine_parameters_keyList_atList(void* ptr, int i);
void QGeoServiceProviderFactory_____createPlaceManagerEngine_parameters_keyList_setList(void* ptr, struct QtLocation_PackedString i);
void* QGeoServiceProviderFactory_____createPlaceManagerEngine_parameters_keyList_newList(void* ptr);

#ifdef __cplusplus
}
#endif

#endif